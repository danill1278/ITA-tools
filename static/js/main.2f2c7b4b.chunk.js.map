{"version":3,"sources":["components/App/MenuContainer/NavigationMenu/NavigationMenu.tsx","components/App/MenuContainer/MenuContainer.tsx","components/App/ContentWrapper/HomePage/Tiles/TileItem/TileItem.tsx","components/App/ContentWrapper/HomePage/Tiles/Tiles.tsx","components/App/Auth/firebase.config.ts","api/home/home-page.api.ts","components/App/ContentWrapper/HomePage/HomePage.tsx","components/App/ContentWrapper/ProfilePage/ProfilePage.tsx","HOC/ProtectedRoute.tsx","components/App/ContentWrapper/ContentWrapper.tsx","components/App/Auth/AuthUtils.ts","store/auth/actionCreators.ts","store/auth/actionConstants.ts","HOC/AuthHOC/InputValidateHOC.tsx","components/App/Auth/validation.ts","components/App/Auth/Signin/Signin.tsx","components/App/Auth/Signup/Signup.tsx","components/App/Auth/Tabs.tsx","components/App/Auth/Auth.tsx","components/App/App.tsx","store/auth/authReducer.ts","store/rootReducer.tsx","index.style.tsx","api/auth/signup.api.ts","sagas/auth/auth.sagas.tsx","sagas/index.sagas.tsx","index.tsx"],"names":["NavigationMenu","MenuContainer","className","TileItem","tile","data-testid","name","icon","text","StyledTiles","styled","div","Tiles","tiles","map","key","id","Firebase","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","getTilesData","a","async","collection","get","then","querySnapshot","tmpTile","forEach","doc","push","data","StyledTitle","StyledTitleH1","h1","HomePage","useState","setTiles","useEffect","fetchTiles","ProfilePage","ProtectedRoute","path","isAuth","redirect","children","render","to","pathname","StyledContentWrapper","StyledModalTest","connect","state","authReducer","uid","props","exact","component","createUserInformation","token","reToken","Cookies","set","expires","signInUser","email","password","dispatch","signInWithEmailAndPassword","response","user","getIdTokenResult","idToken","refreshToken","type","payload","message","signOutUser","signOut","remove","Input","InputError","InputValidate","fieldName","label","validate","input","meta","TextField","variant","error","touched","required","value","undefined","test","emailValidation","length","composeValidators","validators","reduce","validator","SigninForm","form","initialValues","bindActionCreators","onSubmit","formObj","handleFormSubmit","errors","handleSubmit","e","preventDefault","Button","color","SignupForm","confirmPassword","group","authSignup","userData","onSubmitForm","values","TabPanel","index","other","Typography","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","root","flexGrow","TabButtons","classes","setValue","AppBar","position","Tabs","onChange","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","CloseIcon","i","isOpen","setOpen","Dialog","open","onClick","App","Auth","initialState","action","rootReducer","combineReducers","theme","createMuiTheme","palette","primary","main","secondary","GlobalCSS","withStyles","fontSize","borderRadius","fontWeight","letterSpacing","width","margin","backgroundColor","borderColor","padding","top","transform","left","transition","marginLeft","createUserWithEmailAndPassword","console","dir","catch","authSignupFullData","fullUserData","time","Date","getTime","startDate","startTime","endDate","endTime","tasks","resolvedTasks","failedTasks","getAuth","signupWithFullUserData","saveDataInState","signupUser","watchSignupUser","authData","getIdToken","userToken","userId","call","API","isSuccess","userAuthData","storageUserData","put","takeLatest","authSagas","fork","rootSaga","all","sagas","sagaMiddleware","createSagaMiddleware","middleware","thunkMiddleware","store","createStore","applyMiddleware","run","ReactDOM","ThemeProvider","StylesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2f2c7b4b.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationMenu.css';\n\nconst NavigationMenu = () => {\n  return (\n    <div></div>\n  )\n} \n\nexport default NavigationMenu;","import React from 'react';\nimport './MenuContainer.css';\nimport NavigationMenu from './NavigationMenu/NavigationMenu';\n\nconst MenuContainer = () => {\n  return (\n    <div className=\"menu-container\">\n      <div className=\"menu\" >\n        <NavigationMenu />\n      </div>\n    </div>\n  )\n} \n\nexport default MenuContainer;","import React from 'react';\nimport './TileItem.css';\nimport TileInterface from '../TileInterface';\n\ninterface Props {\n  tile: TileInterface;\n}\n\nconst TileItem: React.FC<Props> = ({ tile }) => {\n    return (\n      <div className=\"tiles__tile\" data-testid=\"bg\">\n      <h3>{ tile.name }</h3>\n      <i className={ `fas ${tile.icon}` }></i>\n      <p>{ tile.text }</p>\n    </div>\n  )\n}\n\nexport default TileItem;","import React from 'react';\nimport TileItem from './TileItem/TileItem';\nimport styled from 'styled-components';\nimport TileInterface from './TileInterface';\n\nconst StyledTiles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 25px;\n  position: relative;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr 1fr;\n    width: 90%;\n  }\n\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\ninterface Props {\n  tiles: TileInterface[];\n}\n\nconst Tiles: React.FC<Props> = ({ tiles }) => {\n  return (\n    <div className=\"tiles-container\">\n      <StyledTiles>\n        {\n          tiles.map((tile: any) => <TileItem tile={tile} key={tile.id} />)\n        }\n      </StyledTiles>\n    </div>\n  )\n}\n\nexport default Tiles;","import * as firebase from \"firebase\";\n\nexport const firebaseConfig = {\n        apiKey: \"AIzaSyBUZC-i_E2PdMjmDYTnrvnqFxK7a-gWpRo\",\n        authDomain: \"itatools35.firebaseapp.com\",\n        databaseURL: \"https://itatools35.firebaseio.com\",\n        projectId: \"itatools35\",\n        storageBucket: \"itatools35.appspot.com\",\n        messagingSenderId: \"370129293158\",\n        appId: \"1:370129293158:web:6aadf1e773140d4b10c2a7\"\n};\n\nexport const Firebase = firebase.initializeApp(firebaseConfig);\nexport const db = Firebase.firestore();\nexport const auth = firebase.auth();\n","import { db } from '../../components/App/Auth/firebase.config';\n\nexport async function getTilesData() {\n  const tiles = await db\n    .collection(\"tools\")\n    .get()\n    .then((querySnapshot) => {\n      const tmpTile: any = [];\n      querySnapshot.forEach((doc: any) => {\n        tmpTile.push(doc.data());\n      });\n      return tmpTile;\n    });\n        \n  return tiles;\n};","import React, { useEffect, useState } from 'react';\nimport Tiles from './Tiles/Tiles';\nimport styled from 'styled-components';\nimport { getTilesData } from '../../../../api/home/home-page.api';\n\nconst StyledTitle = styled.div`\n  width: 70%;\n  margin: 0 auto;\n  @media (max-width: 1200px) {\n    width: 90%;\n  }\n`;\n\nconst StyledTitleH1 = styled.h1`\n  color: #232e3d;\n  @media (max-width: 1200px) {\n    text-align: center;\n  }\n`;\n\nconst HomePage = () => {\n\n  const [tiles, setTiles] = useState<any[]>([]);\n\n  const fetchTiles = async () => {\n    const tiles: any = await getTilesData();\n    setTiles(tiles);\n  }\n\n  useEffect(() => {\n    fetchTiles();\n  }, []);\n\n  return (\n    <div>\n      <StyledTitle>\n        <StyledTitleH1>ITA Tools</StyledTitleH1>\n      </StyledTitle>\n      <Tiles tiles = { tiles } />\n    </div>\n  )\n}\n\nexport default HomePage;","import React from 'react';\nimport './ProfilePage.css';\n\nconst ProfilePage = () => {\n  return (\n    <div>\n      <div>----ProfilePage</div>\n    </div>\n  )\n}\n\nexport default ProfilePage;","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\ninterface Props {\n  path: string;\n  isAuth: boolean;\n  redirect: string;\n  children: any;\n}\n\nconst ProtectedRoute: React.FC<Props> = ({path, isAuth, redirect, children }) => {\n  return (\n    <Route \n      path={ path }\n      render={ \n        () => isAuth ? ( children ) : ( <Redirect to={{ pathname: redirect }} /> ) \n      }\n    />\n  )\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport HomePage from './HomePage/HomePage';\nimport { Switch, Route } from 'react-router';\nimport ProfilePage from './ProfilePage/ProfilePage';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport ProtectedRoute from '../../../HOC/ProtectedRoute';\n\nconst StyledContentWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: column;\n  padding: 40px 0px;\n`;\n\nconst StyledModalTest = styled.div`\n  margin-top: 100px;\n`;\n\n\nconst ContentWrapper = (props: any) => {\n\n  return (\n    <StyledContentWrapper>\n      <StyledModalTest>\n      </StyledModalTest>\n      <Switch>\n        <Route path=\"/\" exact component={ HomePage } />\n        <ProtectedRoute path=\"/profile\" redirect=\"/\" isAuth={!!props.id}>\n          <ProfilePage />\n        </ProtectedRoute>\n      </Switch>\n    </StyledContentWrapper>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    id: state.authReducer.uid\n  }\n}\n\nexport default connect(mapStateToProps, null)(ContentWrapper);","import Cookies from \"js-cookie\";\nconst TOKEN = \"token\";\nconst REFRESH_TOKEN = \"refreshToken\";\nconst UID = \"uid\";\n\nexport const createUserInformation = (token:string, reToken: string, uid: string) => {\n  Cookies.set(TOKEN, token, { expires: 1 / 24 });\n  Cookies.set(REFRESH_TOKEN, reToken);\n  Cookies.set(UID, uid);\n}\n\nexport const deleteUserInformation = () => {\n  Cookies.remove(TOKEN);\n  Cookies.remove(REFRESH_TOKEN);\n  Cookies.remove(UID);\n};","import * as actionTypes from \"./actionConstants\";\nimport {\n  SignupInterface,\n  AuthDataInterface\n} from \"@components/App/Auth/Signup/SignupInterface\";\nimport { SIGNIN_SUCCESSFUL, SIGNIN_ERROR, SIGNOUT } from \"./actionConstants\";\nimport { Firebase } from \"../../components/App/Auth/firebase.config\";\nimport {\n  createUserInformation,\n  deleteUserInformation\n} from \"../../components/App/Auth/AuthUtils\";\n\nexport const successSignin = (user: any) => {\n  return {\n    type: SIGNIN_SUCCESSFUL,\n    payload: user\n  };\n};\n\nconst errorSignin = (err: Error) => {\n  return {\n    type: SIGNIN_ERROR,\n    payload: err\n  };\n};\n\nexport const signInUser = (email: string, password: string) => {\n  return async (dispatch: any) => {\n    try {\n      const response = await Firebase.auth().signInWithEmailAndPassword(\n        email,\n        password\n      );\n\n      if (response.user) {\n        const token = await response.user\n          .getIdTokenResult(true)\n          .then(idToken => idToken.token);\n        const refreshToken = response.user.refreshToken;\n        createUserInformation(token, refreshToken, response.user.uid);\n        dispatch(successSignin({ ...response.user, token }));\n      }\n    } catch (err) {\n      dispatch(errorSignin(err.message));\n    }\n  };\n};\nexport const signOutUser = () => {\n  return (dispatch: any) => {\n    Firebase.auth()\n      .signOut()\n      .then(() => {\n        deleteUserInformation();\n        dispatch({\n          type: SIGNOUT\n        });\n      });\n  };\n};\n\nexport const saveUserAuthData = (userData: AuthDataInterface) => {\n  return {\n    type: actionTypes.AUTH_SUCCESSFUL,\n    payload: userData\n  };\n};\n\nexport const authSignup = (userData: SignupInterface) => ({\n  type: actionTypes.AUTH_SIGNUP,\n  payload: userData\n});\n","export const SIGNIN_SUCCESSFUL = \"SIGNIN_SUCCESSFUL\";\nexport const SIGNIN_ERROR = \"SIGNIN_ERROR\";\nexport const SIGNOUT = \"SIGNOUT\";\n\nexport const AUTH_SIGNUP = \"AUTH_SIGNUP\";\nexport const AUTH_SUCCESSFUL = \"AUTH_SUCCESSFUL\";\n","import React from 'react';\nimport { Field } from 'react-final-form';\nimport { TextField } from '@material-ui/core';\nimport styled from 'styled-components';\n\ninterface Props {\n  fieldName: string;\n  id: string;\n  label: string;\n  variant: string;\n  type: string;\n  validate?: any;\n}\n\nconst Input = styled.div`\n  margin: 12px 0px;\n`;\n\nconst InputError = styled.div`\n  margin-bottom: -10px;\n  padding-top: 5px;\n  font-size: 12px;\n  color: #d73c2a;\n  text-align: center;\n`;\n\nconst InputValidate: React.FC<Props> = ({ fieldName, id, label, validate, type }) => (\n  <Input>\n    <Field \n      name={ fieldName }\n      validate={validate}\n    >\n      {({ input, meta }) => (\n        <div>\n          <TextField \n            variant=\"outlined\" \n            id={id}\n            label={ label }\n            type={type}\n            { ...input }\n          />\n          {\n            meta.error && \n            meta.touched &&\n            <InputError>{meta.error}</InputError>\n          }\n        </div>\n      )}\n    </Field>\n  </Input>\n);\n\nexport default InputValidate;","const emailValidation = (email: string): boolean => {\n  const regExp = /^([-._a-z0-9]+@(?:[a-z0-9][-a-z0-9]+\\.)+[a-z]{2,6})$/;\n  return regExp.test(email);\n};\n\nexport const required = (value: string) => (value ? undefined : \"Required\");\n\nexport const email = (value: string) =>\n  emailValidation(value) ? undefined : \"Invalid email!\";\n\nexport const password = (value: string) =>\n  value.length < 6 ? \"Min 6 symbols!\" : undefined;\n\nexport const composeValidators = (...validators: any) => (value: any) =>\n  validators.reduce(\n    (error: any, validator: any) => error || validator(value),\n    undefined\n  );\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { Form } from \"react-final-form\";\nimport { SigninInterface } from \"./Interfaces/SignInInterface\";\nimport { signInUser, signOutUser } from \"../../../../store/auth/actionCreators\";\nimport { connect } from \"react-redux\";\nimport { UserForm } from \"@components/App/Auth/Signin/Interfaces/UserFormInterface\";\nimport InputValidate from \"../../../../HOC/AuthHOC/InputValidateHOC\";\nimport { required, email, password, composeValidators } from \"../validation\";\nimport { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { InitialStateInterface } from \"store/auth/initialStateInterface\";\n\nconst SigninForm = styled.form`\n  width: 480px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst initialValues: UserForm = {\n  email: \"\",\n  password: \"\"\n};\n\nconst SignIn = ({ error, signInUser }: SigninInterface) => {\n  const handleFormSubmit = (formObj: UserForm) => {\n    signInUser(formObj.email, formObj.password);\n  };\n\n  return (\n    <Form\n      onSubmit={formObj => {\n        handleFormSubmit(formObj);\n      }}\n      validate={() => {\n        const errors: any = {};\n        if (error) {\n          errors.password = \"Invalid email or password\";\n        }\n        return errors;\n      }}\n      initialValues={initialValues}\n      render={({ handleSubmit }) => (\n        <SigninForm\n          onSubmit={(e: React.ChangeEvent<{}>) => {\n            e.preventDefault();\n            handleSubmit();\n          }}\n        >\n          <InputValidate\n            id=\"EmailSignin\"\n            label=\"Email\"\n            variant=\"outlined\"\n            validate={composeValidators(required, email)}\n            type=\"email\"\n            fieldName=\"email\"\n          />\n          <InputValidate\n            id=\"PasswordSignin\"\n            label=\"Password\"\n            variant=\"outlined\"\n            validate={composeValidators(required, password)}\n            type=\"password\"\n            fieldName=\"password\"\n          />\n          <Button\n            className=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            SignIn\n          </Button>\n        </SigninForm>\n      )}\n    />\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({ signInUser, signOutUser }, dispatch);\n};\n\nconst mapStateToProps = (state: InitialStateInterface) => {\n  return {\n    error: state.authReducer.error\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { authSignup } from \"../../../../store/auth/actionCreators\";\nimport Button from \"@material-ui/core/Button\";\nimport styled from \"styled-components\";\nimport { SignupInterface } from \"./SignupInterface\";\nimport { Form } from \"react-final-form\";\nimport InputValidate from \"../../../../HOC/AuthHOC/InputValidateHOC\";\nimport { required, email, password, composeValidators } from \"../validation\";\n\nconst SignupForm = styled.form`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n`;\n\ninterface Props {\n  authSignup: (userData: SignupInterface) => void;\n}\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  name: \"\",\n  group: \"\"\n};\n\nconst Signup: React.FC<Props> = props => {\n  const onSubmitForm = (form: any) => {\n    const userData: SignupInterface = {\n      email: form.email,\n      password: form.password,\n      name: form.name,\n      group: form.group\n    };\n    props.authSignup(userData);\n  };\n\n  return (\n    <div>\n      <Form\n        onSubmit={formObj => {\n          onSubmitForm(formObj);\n        }}\n        initialValues={initialValues}\n        validate={values => {\n          const errors: any = {};\n          if (values.confirmPassword !== values.password) {\n            errors.confirmPassword = \"Passwords must match!\";\n          }\n          return errors;\n        }}\n        render={({ handleSubmit }) => (\n          <SignupForm\n            onSubmit={e => {\n              e.preventDefault();\n              handleSubmit();\n            }}\n          >\n            <InputValidate\n              id=\"EmailSignup\"\n              label=\"Email\"\n              variant=\"outlined\"\n              validate={composeValidators(required, email)}\n              type=\"email\"\n              fieldName=\"email\"\n            />\n            <InputValidate\n              id=\"PasswordSignup\"\n              label=\"Password\"\n              variant=\"outlined\"\n              validate={composeValidators(required, password)}\n              type=\"password\"\n              fieldName=\"password\"\n            />\n            <InputValidate\n              id=\"ConfirmPasswordSignup\"\n              label=\"Confirm password\"\n              variant=\"outlined\"\n              validate={composeValidators(required)}\n              type=\"password\"\n              fieldName=\"confirmPassword\"\n            />\n            <InputValidate\n              id=\"NameSignup\"\n              label=\"Name\"\n              variant=\"outlined\"\n              validate={composeValidators(required)}\n              type=\"text\"\n              fieldName=\"name\"\n            />\n            <InputValidate\n              id=\"GroupSignup\"\n              label=\"GroupSignup\"\n              variant=\"outlined\"\n              validate={composeValidators(required)}\n              type=\"text\"\n              fieldName=\"group\"\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              SIGNUP\n            </Button>\n          </SignupForm>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default connect(null, { authSignup })(Signup);\n","import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Box,\n  makeStyles,\n  Tab,\n  Tabs,\n  Typography\n} from \"@material-ui/core\";\nimport SignIn from \"./Signin/Signin\";\nimport Signup from \"./Signup/Signup\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\n\nconst TabButtons = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"SIGN IN\" {...a11yProps(0)} />\n          <Tab label=\"SIGN UP\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <SignIn />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Signup />\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default TabButtons;\n","import React, { useState } from \"react\";\nimport { Dialog } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { signOutUser } from \"../../../store/auth/actionCreators\";\nimport TabButtons from \"./Tabs\";\n\nconst CloseIcon = styled.i`\n  position: absolute;\n  color: #9ba6b2;\n  font-size: 24px;\n  right: 0;\n  top: 0;\n  padding: 10px;\n  &:hover {\n    color: #20233f;\n  }\n`;\n\nconst AuthPopUp = ({ signOutUser }: any) => {\n  const [isOpen, setOpen] = useState(true);\n\n  const handleSignOut = (e: React.ChangeEvent<{}>) => {\n    e.preventDefault();\n    signOutUser();\n  };\n\n  return (\n    <Dialog open={isOpen}>\n      <TabButtons />\n      <CloseIcon className=\"fas fa-times\" onClick={() => setOpen(false)} />\n      <button onClick={handleSignOut} className=\"signOut\">\n        Sign out\n      </button>\n    </Dialog>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({ signOutUser }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(AuthPopUp);\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuContainer from \"./MenuContainer/MenuContainer\";\nimport ContentWrapper from \"./ContentWrapper/ContentWrapper\";\nimport AuthPopUp from \"./Auth/Auth\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <AuthPopUp />\n      <MenuContainer />\n      <ContentWrapper />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  SIGNIN_SUCCESSFUL,\n  SIGNOUT,\n  AUTH_SUCCESSFUL,\n  SIGNIN_ERROR\n} from \"./actionConstants\";\nimport { UserInterface } from \"./initialStateInterface\";\nimport Cookies from \"js-cookie\";\n\nlet token = Cookies.get(\"token\") || Cookies.get(\"refreshToken\");\nconst id = Cookies.get(\"uid\");\n\nexport const initialState: UserInterface = {\n  uid: id || null,\n  token: token || null,\n  error: null\n};\n\nexport const authReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case AUTH_SUCCESSFUL:\n      return {\n        ...state,\n        token: action.payload.token || state.token,\n        uid: action.payload.uid || state.uid\n      };\n\n    case SIGNIN_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    case SIGNIN_SUCCESSFUL:\n      return {\n        ...state,\n        token: action.payload.token || state.token,\n        uid: action.payload.uid || state.uid,\n        error: null\n      };\n\n    case SIGNOUT:\n      return {\n        ...(state = initialState),\n        token: null,\n        uid: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth/authReducer\";\n\nconst rootReducer = combineReducers({\n  authReducer\n});\n\nexport default rootReducer;\n","import { createMuiTheme, withStyles } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#24c3f9\"\n    },\n    error: {\n      main: \"#d73c2a\"\n    },\n    secondary: {\n      main: \"#24c3f9\"\n    }\n  }\n});\n\nexport const GlobalCSS = withStyles({\n  \"@global\": {\n    \".MuiButton-contained\": {\n      fontSize: \"14px\",\n      borderRadius: \"50px\",\n      fontWeight: \"bold\",\n      letterSpacing: \"1px\",\n      width: \"140px\",\n      margin: \"0 auto\",\n      color: \"#f8f7ff\",\n      \"&:hover\": {\n        backgroundColor: \"#ffffff\",\n        borderColor: \"#ffffff\",\n        color: \"#20233f\"\n      }\n    },\n    \".MuiOutlinedInput-input\": {\n      padding: \"10px 15px\",\n      width: \"450px\"\n    },\n    \".MuiOutlinedInput-root\": {\n      borderRadius: \"50px\"\n    },\n    \".MuiInputLabel-outlined\": {\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      left: \"23px\",\n      fontSize: \"14px\",\n      color: \"#20233f\",\n      transition: \"all 0.2s ease-in-out\"\n    },\n    \".MuiInputLabel-outlined.MuiInputLabel-shrink\": {\n      transform: \"translate(0, -37px) scale(0.9)\"\n    },\n\n    \".MuiOutlinedInput-root.MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#ffffff\",\n      backgroundColor: \"#ffffff\"\n    },\n    \".MuiAppBar-colorDefault\": {\n      backgroundColor: \"#ffffff\"\n    },\n    \".MuiTabs-flexContainer\": {\n      marginLeft: \"100px\"\n    }\n  }\n})(() => null);\n","import { SignupInterface, SignupFullDataInterface } from '@components/App/Auth/Signup/SignupInterface';\nimport { auth, db } from '../../components/App/Auth/firebase.config';\nimport { signInUser } from '../../store/auth/actionCreators';\n\n\nexport const authSignup = (userData: SignupInterface) => {\n  return auth\n    .createUserWithEmailAndPassword(userData.email, userData.password)\n    .then((data: any) => {console.dir(data);signInUser(userData.email, userData.password); return data.user})\n    .catch(() => null);\n};\n\nexport const authSignupFullData = (fullUserData: SignupFullDataInterface) => {\n  const time = new Date().getTime();\n  const threeMonth = 3 * 30 * 24* 60 * 60 * 1000;\n  return db\n    .collection('users')\n    .doc(fullUserData.uid)\n    .set({\n      email: fullUserData.email,\n      name: fullUserData.name,\n      group: fullUserData.group,\n      time: {\n        startDate: new Date(time),\n        startTime: time,\n        endDate: new Date(time + threeMonth),\n        endTime: time + threeMonth\n      },\n      tasks: {\n        resolvedTasks: 0,\n        failedTasks: 0\n      }\n    })\n    .then(() => true)\n    .catch(() =>  false);\n};","import { takeLatest, call, fork, put } from \"redux-saga/effects\";\nimport * as actionTypes from \"../../store/auth/actionConstants\";\nimport * as actions from \"../../store/auth/actionCreators\";\nimport * as API from \"../../api/auth/signup.api\";\nimport {\n  AuthDataInterface,\n  SignupFullDataInterface\n} from \"@components/App/Auth/Signup/SignupInterface\";\nimport { createUserInformation } from \"../../components/App/Auth/AuthUtils\";\n\nfunction* getAuth(authData: any) {\n  const userToken: string = yield authData\n    .getIdToken()\n    .then((token: string) => token);\n  const userId: string = authData.uid;\n  const refreshToken: string = authData.refreshToken;\n  const auth: AuthDataInterface = {\n    token: userToken,\n    refreshToken: refreshToken,\n    uid: userId\n  };\n  return auth;\n}\n\nfunction* signupWithFullUserData(data: SignupFullDataInterface) {\n  const isSuccess: boolean = yield call(API.authSignupFullData, {\n    uid: data.uid,\n    email: data.email,\n    name: data.name,\n    group: data.group\n  });\n  return isSuccess;\n}\n\nfunction* saveDataInState(userAuthData: any) {\n  const storageUserData: AuthDataInterface = {\n    token: userAuthData.token,\n    uid: userAuthData.uid,\n    refreshToken: userAuthData.refreshToken\n  };\n  yield put(actions.saveUserAuthData(storageUserData));\n\n  if (\n    !storageUserData.token ||\n    !storageUserData.uid ||\n    !storageUserData.refreshToken\n  ) {\n    return;\n  }\n  createUserInformation(\n    storageUserData.token,\n    storageUserData.refreshToken,\n    storageUserData.uid\n  );\n}\n\nfunction* signupUser(action: any) {\n  try {\n    const user = yield call(API.authSignup, {\n      email: action.payload.email,\n      password: action.payload.password,\n      name: action.payload.name,\n      group: action.payload.group\n    });\n\n    if (!user) {\n      return;\n    }\n\n    const userAuthData: AuthDataInterface = yield call(getAuth, user);\n    const isSuccess = yield call(signupWithFullUserData, {\n      uid: userAuthData.uid,\n      ...action.payload\n    });\n\n    if (!isSuccess) {\n      return;\n    }\n\n    yield call(saveDataInState, { ...userAuthData, error: null, isAuth: true });\n  } catch (e) {\n    // error handle in future\n  }\n}\n\nfunction* watchSignupUser() {\n  yield takeLatest(actionTypes.AUTH_SIGNUP, signupUser);\n}\n\nconst authSagas = [fork(watchSignupUser)];\n\nexport default authSagas;\n","import sagas from \"./auth/auth.sagas\";\nimport { all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n  yield all([...sagas]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/rootReducer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider, StylesProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./index.style\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./styles/index.css\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas/index.sagas\";\nimport { GlobalCSS } from \"./index.style\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, thunkMiddleware];\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <StylesProvider>\n          <GlobalCSS />\n          <App />\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}